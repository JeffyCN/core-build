#! /bin/sh -e
# initramfs local-premount script to install from recovery

PREREQ=""

# Output pre-requisites
prereqs()
{
        echo "$PREREQ"
}

case "$1" in
    prereqs)
        prereqs
        exit 0
        ;;
esac


for x in $(cat /proc/cmdline); do
    case $x in
        snap_mode=*)
            snap_mode=${x#*=}
            ;;
        snap_recovery_system=*)
            recovery=${x#*=}
            echo "System recovery set to $recovery"
            ;;
    esac
done


# Only prepare writable on tmpfs in these three modes

if [ "$snap_mode" != "install" ] && [ "$snap_mode" != "recover" ] && [ "$snap_mode" != "recover_reboot" ]; then
    exit 0
fi


sys_recover_part="$(findfs LABEL=sys-recover || true)"
system_boot_part="$(findfs LABEL=system-boot || true)"

syspath="$(dirname "$(realpath /sys/class/block/"$(basename "$sys_recover_part")")")"
device="$(realpath /dev/block/"$(cat "$syspath"/dev)")"


create_writable() {
    echo "Create writable"
    mkdir /sys-recover /writable /system-boot
    mount -t vfat "$sys_recover_part" /sys-recover
    mount -t vfat "$system_boot_part" /system-boot
    mount -t tmpfs tmpfs /writable
    mkdir -p /writable/"$seed_path"
    mkdir -p /writable/"$snaps_path"
    mkdir -p /writable/system-data/boot
    echo "copy recovery"
    cp -r "$recovery_path"/* /writable/"$seed_path"/
    echo "create symlinks"
    snap_core=$(basename $(echo "$recovery_path"/snaps/core18_*.snap|tail -1))
    # fugly - hardcoded kernel name :( we need this so that the grub-bootenv
    # kernel name matches the kernel that is later seeded
    snap_kernel=$(basename $(echo "$recovery_path"/snaps/pc-kernel_*.snap|tail -1))
    ln -s ../seed/snaps/"$snap_core" /writable/"$snaps_path"
    ln -s ../seed/snaps/"$snap_kernel" /writable/"$snaps_path"
    echo "done"
}

extract_kernel() {
    echo "Extract kernel"
    mkdir /kernel-snap
    mount -t squashfs "/writable/$seed_path/snaps/$snap_kernel" /kernel-snap
    cp /kernel-snap/kernel.img /system-boot/
    cp /kernel-snap/initrd.img /system-boot/
    umount /kernel-snap
    umount /writable
}

update_grub() {
    echo "Update grub"
    system_boot_grubenv="/system-boot/EFI/ubuntu/grubenv"
    sys_recover_grubenv="/sys-recover/EFI/ubuntu/grubenv"
    mkdir -p $(dirname "$system_boot_grubenv")

    # snapd needs this (will be bind-mounted on /boot/grub later)
    grub-editenv "$system_boot_grubenv" create
    grub-editenv "$system_boot_grubenv" set snap_core="core18_x1.snap"
    grub-editenv "$system_boot_grubenv" set snap_kernel="pc-kernel_x1.snap"

    umount /sys-recover
    umount /system-boot
}


recovery_path="/sys-recover/system/$recovery"
seed_path="/system-data/var/lib/snapd/seed"
snaps_path="/system-data/var/lib/snapd/snaps"

create_writable
update_grub
sync

