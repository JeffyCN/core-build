#! /bin/sh -e
# initramfs local-premount script to install from recovery

PREREQ=""

# Output pre-requisites
prereqs()
{
        echo "$PREREQ"
}

case "$1" in
    prereqs)
        prereqs
        exit 0
        ;;
esac


# shellcheck disable=SC2013
for x in $(cat /proc/cmdline); do
    case $x in
        snap_mode=*)
            snap_mode=${x#*=}
            ;;
        snap_recovery_system=*)
            recovery=${x#*=}
            echo "System recovery set to $recovery"
            ;;
    esac
done


# Only prepare writable on tmpfs in these three modes

if [ "$snap_mode" != "install" ] && [ "$snap_mode" != "recover" ]; then
    # run mode
    # TODO: add recovery handling
    chooser -seed /ubuntu-seed -output "$output_file" -check
    exit 0
fi


ubuntu_seed_part="$(findfs LABEL=ubuntu-seed || true)"
ubuntu_boot_part="$(findfs LABEL=ubuntu-boot || true)"

#syspath="$(dirname "$(realpath /sys/class/block/"$(basename "$ubuntu_seed_part")")")"
#device="$(realpath /dev/block/"$(cat "$syspath"/dev)")"


seed_grubenv_get() {
    grub-editenv /ubuntu-seed/EFI/ubuntu/grubenv list|grep -w "$1"|cut -d= -f2
}

seed_grubenv_set() {
    grub-editenv /ubuntu-seed/EFI/ubuntu/grubenv set "$1"
}

extract_kernel() {
    version="$1"
    # FIXME: we must get the correct kernel snap from the recovery system
    # possibly the best way would be to invoke the go binary to do that for us
    echo "TODO: extract kernel $version"
}

create_writable_partition_on_tmpfs() {
    echo "Create writable partition on tpmfs"
    mkdir /ubuntu-seed /writable /ubuntu-boot
    mount -t vfat "$ubuntu_seed_part" /ubuntu-seed
    mount -t vfat "$ubuntu_boot_part" /ubuntu-boot
    mount -t tmpfs tmpfs /writable
}

run_chooser() {
    output_file="/writable/$system_path/chooser.out"
    mkdir -p /writable/"$system_path"
    if [ "$snap_mode" = "install" ]; then
        chooser -title "Select the recovery version to install:" -seed /ubuntu-seed -output "$output_file"
    elif [ "$snap_mode" = "recover" ]; then
        chooser -title "Select the recovery system version:" -seed /ubuntu-seed -output "$output_file"
        current_version="$(seed_grubenv_get snap_recovery_system)"
        # shellcheck disable=SC1090
        . "$output_file"
        # shellcheck disable=SC2154
        if [ "$current_version" != "$uc_recovery_system" ]; then
            # FIXME: also tell the bootloader to boot kernel-next for recovery if using current/next
            #        to prevent open-value parameters in the kernel command line
            seed_grubenv_set snap_recovery_system="$uc_recovery_system"
            extract_kernel "$uc_recovery_system"
            echo "Rebooting to use recovery version $uc_recovery_system"
            sleep 2
            sync
            reboot
        fi
    fi
}

populate_writable_partition() {
    mkdir -p /writable/"$seed_path"
    mkdir -p /writable/"$snaps_path"
    mkdir -p /writable/system-data/boot
    echo "bind mount recovery"
    mount -o bind "$recovery_path" /writable/"$seed_path"
    echo "bind mount snap directory"
    mkdir -p /writable/"$seed_path"/snaps
    mount -o bind "$recovery_root"/snaps /writable/"$seed_path"/snaps
    
    echo "create symlinks"
    snap_core=$(basename "$(echo "$recovery_root"/snaps/core20_*.snap|tail -1)")
    # fugly - hardcoded kernel name :( we need this so that the grub-bootenv
    # kernel name matches the kernel that is later seeded
    snap_kernel=$(basename "$(echo "$recovery_root"/snaps/pc-kernel_*.snap|tail -1)")
    ln -s ../seed/snaps/"$snap_core" /writable/"$snaps_path"
    ln -s ../seed/snaps/"$snap_kernel" /writable/"$snaps_path"
    echo "done"
}

update_grub() {
    echo "Update grub"
    system_boot_grubenv="/ubuntu-boot/EFI/ubuntu/grubenv"
    #sys_recover_grubenv="/ubuntu-seed/EFI/ubuntu/grubenv"
    mkdir -p "$(dirname "$system_boot_grubenv")"

    # snapd needs this (will be bind-mounted on /boot/grub later)
    grub-editenv "$system_boot_grubenv" create
    grub-editenv "$system_boot_grubenv" set snap_core="core20_x1.snap"
    grub-editenv "$system_boot_grubenv" set snap_kernel="pc-kernel_x1.snap"

    umount /ubuntu-seed
    umount /ubuntu-boot
}


recovery_root="/ubuntu-seed/"
recovery_path="$recovery_root/systems/$recovery"
system_path="/system-data"
seed_path="$system_path/var/lib/snapd/seed"
snaps_path="$system_path/var/lib/snapd/snaps"

create_writable_partition_on_tmpfs
run_chooser
populate_writable_partition
update_grub

sync

